// Example JavaScript code using async/await
// I'm interested in understanding how async/await works in JavaScript,
// but I'm not entirely clear on how it handles errors.
async function fetchData(url) {
    try {
        const response = await fetch(url);
        const data = await response.json();
        return data;
    } catch (error) {
        // How does error handling work here? I need to investigate further.
        console.error("Error fetching data:", error);
    }
}

#This program converts temperatures between Celsius and Fahrenheit
def celsius_to_fahrenheit(celsius):
    fahrenheit = (celsius * 9/5) + 32
    return fahrenheit

def fahrenheit_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5/9
    return celsius

choice = input("Convert to Celsius (C) or Fahrenheit (F)? ").upper()
temperature = float(input("Enter temperature value: "))

if choice == "C":
    converted_temp = fahrenheit_to_celsius(temperature)
    print(f"{temperature}째F is equal to {converted_temp}째C")
elif choice == "F":
    converted_temp = celsius_to_fahrenheit(temperature)
    print(f"{temperature}째C is equal to {converted_temp}째F")
else:
    print("Invalid choice. Please enter C or F.")


#This program allows users to create and manage a simple to-do list.
to_do_list = []

while True:
    print("To-Do List:")
    for i, task in enumerate(to_do_list, 1):
        print(f"{i}. {task}")

    choice = input("Enter 'A' to add a task, 'D' to delete a task, or 'Q' to quit: ").upper()

    if choice == "A":
        task = input("Enter a new task: ")
        to_do_list.append(task)
    elif choice == "D":
        task_index = int(input("Enter the task number to delete: ")) - 1
        if 0 <= task_index < len(to_do_list):
            del to_do_list[task_index]
        else:
            print("Invalid task number.")
    elif choice == "Q":
        break
    else:
        print("Invalid choice. Please enter A, D, or Q.")
